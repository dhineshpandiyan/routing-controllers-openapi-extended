import 'reflect-metadata'
import { getFromContainer, MetadataStorage } from 'class-validator' // tslint:disable-line
import { Express } from 'express'
import {
  createExpressServer,
  getMetadataArgsStorage
} from 'routing-controllers'
import { generateSwagger } from 'routing-controllers-openapi-extended'

import { UsersController } from './UsersController'

const routingControllersOptions = {
  controllers: [UsersController],
  routePrefix: '/api'
}
const app: Express = createExpressServer(routingControllersOptions)

const metadatas = (getFromContainer(MetadataStorage) as any).validationMetadatas
const storage = getMetadataArgsStorage()
const spec = generateSwagger(storage, routingControllersOptions, metadatas, {
  components: {
    securitySchemes: {
      basicAuth: {
        scheme: 'basic',
        type: 'http'
      }
    }
  },
  info: {
    description: 'Generated by script',
    title: 'A sample API',
    version: '1.0.0'
  }
})

// Render spec on root:
app.get('/', (_req, res) => {
  res.json(spec)
})

app.listen(3001)
console.log(
  'Express server is running on port 3001. Open http://localhost:3001/users/'
)
